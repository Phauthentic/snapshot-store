name: CI

on: [push, pull_request]

jobs:
  testsuite:
    name: Unittests
    runs-on: ubuntu-20.04

    env:
        DB_HOST: 127.0.0.1
        DB_DATABASE: test
        DB_USER: test
        DB_ROOT_PASSWORD: changeme
        DB_PASSWORD: changeme
        REDIS_SCHEME: tcp
        REDIS_HOST: 127.0.0.1
        REDIS_PORT: 6379

    services:
      mariadb:
        image: mariadb:latest
        ports:
          - 3306:3306
        env:
          DATABASE_HOST: 127.0.0.1
          MARIADB_DATABASE: test
          MARIADB_USER: test
          MARIADB_ROOT_PASSWORD: changeme
          MARIADB_PASSWORD: changeme
        options: --health-cmd="healthcheck.sh --connect --innodb_initialized" --health-interval=10s --health-timeout=5s --health-retries=3
      redis:
        image: redis
        options: >-
            --health-cmd "redis-cli ping"
            --health-interval 10s
            --health-timeout 5s
            --health-retries 5
        ports:
          # Maps port 6379 on service container to the host
          - 6379:6379

    strategy:
      fail-fast: false
      matrix:
        php-version: ['8.2', '8.3']

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 1

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: ${{ matrix.php-version }}
        extensions: mbstring, json, fileinfo
        tools: pecl
        coverage: pcov

    - name: Composer install
      run: |
        if [[ ${{ matrix.prefer-lowest == 'prefer-lowest' }} ]]; then
          composer update --prefer-lowest --prefer-stable
        else
          composer install
        fi

    - name: Run PHPUnit
      run: |
        if [[ ${{ matrix.php-version }} == '8.2' ]]; then
          bin/phpunit --coverage-clover=coverage.xml
        else
          bin/phpunit
        fi
    - name: Code Coverage Report
      if: success() && matrix.php-version == '8.2'
      uses: codecov/codecov-action@v4

  cs-stan:
    name: Coding Standard & Static Analysis
    runs-on: ubuntu-20.04

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 1

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: ${{ matrix.php-version }}
        extensions: mbstring, json, fileinfo
        coverage: none
        tools: pecl

    - name: Composer install
      run: composer update --prefer-lowest --prefer-stable

    - name: Run phpcs
      run: bin/phpcs --version && bin/phpcs --report=source --standard=phpcs.xml

    - name: Run phpstan
      run: bin/phpstan -V && bin/phpstan --error-format=github
